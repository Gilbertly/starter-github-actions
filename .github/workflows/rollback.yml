name: rollbackDeployment

on:
  issues:
    types: [labeled]
  issue_comment:
    types: [created]

jobs:
  # RollbackStaging:
  #   runs-on: ubuntu-latest
  #   # if: ${{ !github.event.label }} && ${{ !github.event.issue.pull_request }}
  #   # if: ${{ github.event_name == }}
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v1

  #     - name: Fetch previous staging deployments
  #       run: echo "Fetch previous staging deployments"

  #     - name: Fetch previous prod deployments
  #       run: echo "Fetch previous prod deployments"

  #     # - name: Comment on Issue
  #     #   uses: actions/github-script@v3
  #     #   with:
  #     #     script: |
  #     #       let commentBody = 'Please label the issue with an appropriate rollback tag. For example, the tags `RollbackStaging` or `RollbackProd`';

  #     #       github.issues.createComment({
  #     #         issue_number: context.issue.number,
  #     #         owner: context.repo.owner,
  #     #         repo: context.repo.repo,
  #     #         body: commentBody,
  #     #       })

  StagingPreviousDeployments:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'RollbackStaging'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Echo message - Fetch previous staging deployments
        run: echo "Build and deploy to prod after approval"

      - name: Comment on Issue
        uses: actions/github-script@v3
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Successfully rolled-back previous `staging` deployment!',
            })

  RollbackStaging:
    runs-on: ubuntu-latest
    if: ${{ !github.event.issue.pull_request && github.event.comment.body == '/rollback'}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Comment on Issue
        uses: actions/github-script@v3
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Successfully rolled-back previous `staging` deployment!',
            })

# comment deployment lists available

# get user input

# if prod, wait approval
