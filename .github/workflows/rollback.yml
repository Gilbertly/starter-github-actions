name: rollbackDeployment

on:
  issues:
    types: [labeled]
  issue_comment:
    types: [created]

jobs:
  StagingPreviousDeployments:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'RollbackStaging'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Echo message - Fetch previous staging deployments
        run: echo "Build and deploy to prod after approval"

      - name: Comment on Issue
        uses: actions/github-script@v3
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Previous `staging` deployments:',
            })

  RollbackStaging:
    runs-on: ubuntu-latest
    if: ${{ !github.event.issue.pull_request && contains(github.event.comment.body, '/rollback')}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: View context attributes
        uses: actions/github-script@v5
        with:
          script: console.log(context)

      - name: Get comment body payload
        uses: actions/github-script@v3
        with:
          script: |
            const commentBody = context.payload.comment.body;
            const rollbackTimestamp = commentBody.split('/rollback ')[1];

            if (rollbackTimestamp.indexOf(' ') >= 0) {
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `Invalid rollback parameter input: ${commentBody}`,
              })
            }

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Rolling-back staging deployment to: ${rollbackTimestamp}`,
            })


      - name: Comment on Issue
        uses: actions/github-script@v3
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Successfully rolled-back previous `staging` deployment!',
            })

# comment deployment lists available

# get user input

# if prod, wait approval
